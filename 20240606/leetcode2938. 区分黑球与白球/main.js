// 桌子上有 n 个球，每个球的颜色不是黑色，就是白色。

// 给你一个长度为 n 、下标从 0 开始的二进制字符串 s，其中 1 和 0 分别代表黑色和白色的球。

// 在每一步中，你可以选择两个相邻的球并交换它们。

// 返回「将所有黑色球都移到右侧，所有白色球都移到左侧所需的 最小步数」。

/**
 * @param {string} s
 * @return {number}
 */
var minimumSteps = function (s) {
  const n = s.length;
  let ans = 0;
  let pre = 0;
  for (let i = n - 1; i >= 0; i--) {
    if (s[i] === "1") {
      ans += n - pre - 1 - i;
      pre++;
    }
  }
  return ans;
};

// 100110101001 => 000000111111
// 001110101001 +2
// 001101010101 +3
// 001010101011 +4
// 000101010111 +4
// 000010101111 +3
// 000001011111 +2
// 000000111111 +1

// 100110101001
// 6  44 3 2

// n - 4
// n - 2
