/*
 * @Author: mangwu                                                             *
 * @File: main.js                                                              *
 * @Date: 2023-06-11 11:12:47                                                  *
 * @LastModifiedDate: 2023-06-11 11:54:05                                      *
 * @ModifiedBy: mangwu                                                         *
 * -----------------------                                                     *
 * Copyright (c) 2023 mangwu                                                   *
 * -----------------------                                                     *
 * @HISTORY:                                                                   *
 * Date   	            By 	    Comments                                       *
 * ---------------------	--------	----------------------------------------------- *
 */

// 给你一个长度为 n 、下标从 0 开始的整数数组 nums ，表示收集不同巧克力的成本。每个巧克力都对应一个不同的类型，最初，位于下标 i 的巧克力就对应第 i 个类型。

// 在一步操作中，你可以用成本 x 执行下述行为：

// 同时对于所有下标 0 <= i < n - 1 进行以下操作， 将下标 i 处的巧克力的类型更改为下标 (i + 1) 处的巧克力对应的类型。如果 i == n - 1 ，则该巧克力的类型将会变更为下标 0 处巧克力对应的类型。
// 假设你可以执行任意次操作，请返回收集所有类型巧克力所需的最小成本。

/**
 * @param {number[]} nums
 * @param {number} x
 * @return {number}
 */
var minCost = function (nums, x) {
  // 最小值配合x就是可以操作实现的一次最小成本
  const n = nums.length;
  const min = Math.min.apply(null, nums);
  let res = 0;
  
};

// [20,2,15,2]  5


// [5,3,5,3] 5
// 3 + 3 + 5 + 3 + 3
// 3 + 3 + 5 + 5

// [5,2,5,2] 5
// 2 + 2 + 5 + 2 + 2
// 5 + 2 + 5 + 2 

