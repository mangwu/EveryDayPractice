/*
 * @Author: mangwu                                                             *
 * @File: main.js                                                              *
 * @Date: 2022-06-16 15:28:30                                                  *
 * @LastModifiedDate: 2022-06-16 17:00:07                                      *
 * @ModifiedBy: mangwu                                                         *
 * -----------------------                                                     *
 * Copyright (c) 2022 mangwu                                                   *
 * -----------------------                                                     *
 * @HISTORY:                                                                   *
 * Date   	            By 	    Comments                                       *
 * ---------------------	--------	----------------------------------------------- *
 */

// 石头剪刀布是常见的猜拳游戏:石头胜剪刀,剪刀胜布,布胜石头。
// 如果两个人出拳一 样，则不分胜负。在《生活大爆炸》第二季第 8 集中出现了一种石头剪刀布的升级版游戏。

// 升级版游戏在传统的石头剪刀布游戏的基础上,增加了两个新手势:

// 斯波克:《星际迷航》主角之一。

// 蜥蜴人:《星际迷航》中的反面角色。

// 这五种手势的胜负关系如表一所示,表中列出的是甲对乙的游戏结果。

// 甲\乙	剪刀	石头	布	蜥蜴人	斯波克
// 剪刀	平	输	赢	赢	输
// 石头	×	平	输	赢	输
// 布	×	×	平	输	赢
// 蜥蜴人	×	×	×	平	赢
// 斯波克	×	×	×	×	平
// 现在,小 A 和小 B 尝试玩这种升级版的猜拳游戏。
// 已知他们的出拳都是有周期性规律的，但周期长度不一定相等。
// 例如：如果小A以“石头-布-石头-剪刀-蜥蜴人-斯波克”长度为 6 的周期出拳,
// 那么他的出拳序列就是“石头-布-石头-剪刀-蜥蜴人-斯波克-石头-布-石头-剪刀-蜥蜴人-斯波克-......”,
// 而如果小B以“剪刀-石头-布-斯波克-蜥蜴人”长度为 5 的周期出拳,
// 那么他出拳的序列就是“剪刀-石头-布-斯波克-蜥蜴人-剪刀-石头-布-斯波克-蜥蜴人-......”

// 已知小 A 和小 B 一共进行 N 次猜拳。每一次赢的人得 1 分，输的得 0 分；平局两人都得 0 分。
// 现请你统计 N 次猜拳结束之后两人的得分。

// 输入格式
// 第一行包含三个整数：N,NA,NB,分别表示共进行 N 次猜拳、小 A 出拳的周期长度，小 B 出拳的周期长度。
// 数与数之间以一个空格分隔。

// 第二行包含 NA 个整数,表示小 A 出拳的规律,第三行包含 NB 个整数,表示小 B 出拳的规律。
// 其中，0 表示“剪刀”，1 表示“石头”，2 表示“布”，3 表示“蜥蜴人”，4 表示“斯波克”。数与数之间以一个空格分隔。

// 输出格式
// 输出一行，包含两个整数，以一个空格分隔，分别表示小 A、小 B 的得分。

// 样例一
// input
// 10 5 6
// 0 1 2 3 4
// 0 3 4 2 1 0

// output
// 6 2

// 样例二
// input
// 9 5 5
// 0 1 2 3 4
// 1 0 3 2 4

// output
// 4 4

// 限制与约定
// 0<N≤200,0<NA≤200,0<NB≤200
// 时间限制：1s
// 内存限制：128MB

// 0 => 平 1 => 输 2 => 赢
const RESULT = [
  [0, 1, 2, 2, 1],
  [2, 0, 1, 2, 1],
  [1, 2, 0, 1, 2],
  [1, 1, 2, 0, 2],
  [2, 2, 1, 1, 0],
];

/**
 * @description AB的胜负关系
 * @param {number} n 猜拳次数
 * @param {number} na A的出拳周期
 * @param {number} nb B的出拳周期
 * @param {number[]} aRule A的出拳规律
 * @param {number[]} bRule B的出拳规律
 * @returns {number[]} A和B的得分
 */
var fingerGuess = function (n, na, nb, aRule, bRule) {
  // 0 表示“剪刀”，1 表示“石头”，2 表示“布”，3 表示“蜥蜴人”，4 表示“斯波克”
  let ans = [0, 0];
  for (let i = 0; i < n; i++) {
    // 第i次猜拳
    // a的出拳
    let a = aRule[i % na];
    // b的出拳
    let b = bRule[i % nb];
    // 猜拳结果
    let res = RESULT[a][b];
    if (res == 2) {
      // a赢了
      ans[0]++;
    } else if (res == 1) {
      // b 赢了
      ans[1]++;
    }
  }
  return ans;
};

fingerGuess(10, 5, 6, [0, 1, 2, 3, 4], [0, 3, 4, 2, 1, 0]); // 6 2
fingerGuess(9, 5, 5, [0, 1, 2, 3, 4], [1, 0, 3, 2, 4]); // 4 4
