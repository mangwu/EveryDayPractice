/*
 * @Author: mangwu                                                             *
 * @File: main.js                                                              *
 * @Date: 2025-03-05 16:46:51                                                  *
 * @LastModifiedDate: 2025-03-06 17:15:50                                      *
 * @ModifiedBy: mangwu                                                         *
 * -----------------------                                                     *
 * Copyright (c) 2025 mangwu                                                   *
 * -----------------------                                                     *
 * @HISTORY:                                                                   *
 * Date   	            By 	    Comments                                       *
 * ---------------------	--------	----------------------------------------------- *
 */

// 初始时有 n 个灯泡处于关闭状态。第一轮，你将会打开所有灯泡。接下来的第二轮，你将会每两个灯泡关闭第二个。

// 第三轮，你每三个灯泡就切换第三个灯泡的开关（即，打开变关闭，关闭变打开）。第 i 轮，你每 i 个灯泡就切换第 i 个灯泡的开关。直到第 n 轮，你只需要切换最后一个灯泡的开关。

// 找出并返回 n 轮后有多少个亮着的灯泡。

/**
 * @param {number} n
 * @return {number}
 */
var bulbSwitch = function (n) {
  // 每个灯泡默认是关闭的
  // 灯泡i被操作的次数为 1 - n中，i能整除的轮的个数
  // 当灯泡被操作奇数次时，灯泡才亮
  // 观察每个灯泡被操作次数:
  // 1: 1 => 1
  // 2: 2 => 1 2
  // 3: 2 => 1 3
  // 4: 3 => 1 2 4
  // 5: 2 => 1 5
  // 6: 4 => 1 2 3 6
  // 7: 2 => 1 7
  // 8: 4 => 1 2 4 8
  // 9: 3 => 1 3 9
  // 10:4 => 1 2 5 10
  // 可以发现，被操作次数是i的所有[不同因数的个数]
  // 因为因数总是成对的，例如 2 * 3 = 6， 2 * 4 = 8，所以i的不同因数个数一般为偶数
  // 只有当数可以由两个相同的因素数相乘得到时，其不同因数个数才时奇数，例如9 = 3 * 3
  return Math.floor(Math.sqrt(n));
};
